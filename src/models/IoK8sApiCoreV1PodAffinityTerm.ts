// tslint:disable
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
import {
    IoK8sApimachineryPkgApisMetaV1LabelSelector,
    IoK8sApimachineryPkgApisMetaV1LabelSelectorFromJSON,
    IoK8sApimachineryPkgApisMetaV1LabelSelectorToJSON,
} from './index.ts';

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 * @export
 * @interface IoK8sApiCoreV1PodAffinityTerm
 */
export interface IoK8sApiCoreV1PodAffinityTerm {
    /**
     * 
     * @type {IoK8sApimachineryPkgApisMetaV1LabelSelector}
     * @memberof IoK8sApiCoreV1PodAffinityTerm
     */
    labelSelector?: IoK8sApimachineryPkgApisMetaV1LabelSelector;
    /**
     * namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod\'s namespace\"
     * @type {Array<string>}
     * @memberof IoK8sApiCoreV1PodAffinityTerm
     */
    namespaces?: Array<string>;
    /**
     * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
     * @type {string}
     * @memberof IoK8sApiCoreV1PodAffinityTerm
     */
    topologyKey: string;
}

export function IoK8sApiCoreV1PodAffinityTermFromJSON(json: any): IoK8sApiCoreV1PodAffinityTerm {
    return {
        'labelSelector': !exists(json, 'labelSelector') ? undefined : IoK8sApimachineryPkgApisMetaV1LabelSelectorFromJSON(json['labelSelector']),
        'namespaces': !exists(json, 'namespaces') ? undefined : json['namespaces'],
        'topologyKey': json['topologyKey'],
    };
}

export function IoK8sApiCoreV1PodAffinityTermToJSON(value?: IoK8sApiCoreV1PodAffinityTerm): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'labelSelector': IoK8sApimachineryPkgApisMetaV1LabelSelectorToJSON(value.labelSelector),
        'namespaces': value.namespaces,
        'topologyKey': value.topologyKey,
    };
}


