// tslint:disable
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    IoK8sApiBatchV1JobCondition,
    IoK8sApiBatchV1JobConditionFromJSON,
    IoK8sApiBatchV1JobConditionToJSON,
} from './';

/**
 * JobStatus represents the current state of a Job.
 * @export
 * @interface IoK8sApiBatchV1JobStatus
 */
export interface IoK8sApiBatchV1JobStatus {
    /**
     * The number of actively running pods.
     * @type {number}
     * @memberof IoK8sApiBatchV1JobStatus
     */
    active?: number;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof IoK8sApiBatchV1JobStatus
     */
    completionTime?: Date;
    /**
     * The latest available observations of an object\'s current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
     * @type {Array<IoK8sApiBatchV1JobCondition>}
     * @memberof IoK8sApiBatchV1JobStatus
     */
    conditions?: Array<IoK8sApiBatchV1JobCondition>;
    /**
     * The number of pods which reached phase Failed.
     * @type {number}
     * @memberof IoK8sApiBatchV1JobStatus
     */
    failed?: number;
    /**
     * Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
     * @type {Date}
     * @memberof IoK8sApiBatchV1JobStatus
     */
    startTime?: Date;
    /**
     * The number of pods which reached phase Succeeded.
     * @type {number}
     * @memberof IoK8sApiBatchV1JobStatus
     */
    succeeded?: number;
}

export function IoK8sApiBatchV1JobStatusFromJSON(json: any): IoK8sApiBatchV1JobStatus {
    return {
        'active': !exists(json, 'active') ? undefined : json['active'],
        'completionTime': !exists(json, 'completionTime') ? undefined : new Date(json['completionTime']),
        'conditions': !exists(json, 'conditions') ? undefined : (json['conditions'] as Array<any>).map(IoK8sApiBatchV1JobConditionFromJSON),
        'failed': !exists(json, 'failed') ? undefined : json['failed'],
        'startTime': !exists(json, 'startTime') ? undefined : new Date(json['startTime']),
        'succeeded': !exists(json, 'succeeded') ? undefined : json['succeeded'],
    };
}

export function IoK8sApiBatchV1JobStatusToJSON(value?: IoK8sApiBatchV1JobStatus): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'active': value.active,
        'completionTime': value.completionTime === undefined ? undefined : value.completionTime.toISOString(),
        'conditions': value.conditions === undefined ? undefined : (value.conditions as Array<any>).map(IoK8sApiBatchV1JobConditionToJSON),
        'failed': value.failed,
        'startTime': value.startTime === undefined ? undefined : value.startTime.toISOString(),
        'succeeded': value.succeeded,
    };
}


