// tslint:disable
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
/**
 * VolumeMount describes a mounting of a Volume within a container.
 * @export
 * @interface IoK8sApiCoreV1VolumeMount
 */
export interface IoK8sApiCoreV1VolumeMount {
    /**
     * Path within the container at which the volume should be mounted.  Must not contain \':\'.
     * @type {string}
     * @memberof IoK8sApiCoreV1VolumeMount
     */
    mountPath: string;
    /**
     * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
     * @type {string}
     * @memberof IoK8sApiCoreV1VolumeMount
     */
    mountPropagation?: string;
    /**
     * This must match the Name of a Volume.
     * @type {string}
     * @memberof IoK8sApiCoreV1VolumeMount
     */
    name: string;
    /**
     * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1VolumeMount
     */
    readOnly?: boolean;
    /**
     * Path within the volume from which the container\'s volume should be mounted. Defaults to \"\" (volume\'s root).
     * @type {string}
     * @memberof IoK8sApiCoreV1VolumeMount
     */
    subPath?: string;
    /**
     * Expanded path within the volume from which the container\'s volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container\'s environment. Defaults to \"\" (volume\'s root). SubPathExpr and SubPath are mutually exclusive. This field is beta in 1.15.
     * @type {string}
     * @memberof IoK8sApiCoreV1VolumeMount
     */
    subPathExpr?: string;
}

export function IoK8sApiCoreV1VolumeMountFromJSON(json: any): IoK8sApiCoreV1VolumeMount {
    return {
        'mountPath': json['mountPath'],
        'mountPropagation': !exists(json, 'mountPropagation') ? undefined : json['mountPropagation'],
        'name': json['name'],
        'readOnly': !exists(json, 'readOnly') ? undefined : json['readOnly'],
        'subPath': !exists(json, 'subPath') ? undefined : json['subPath'],
        'subPathExpr': !exists(json, 'subPathExpr') ? undefined : json['subPathExpr'],
    };
}

export function IoK8sApiCoreV1VolumeMountToJSON(value?: IoK8sApiCoreV1VolumeMount): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'mountPath': value.mountPath,
        'mountPropagation': value.mountPropagation,
        'name': value.name,
        'readOnly': value.readOnly,
        'subPath': value.subPath,
        'subPathExpr': value.subPathExpr,
    };
}


