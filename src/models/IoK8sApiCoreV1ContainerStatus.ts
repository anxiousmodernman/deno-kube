// tslint:disable
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime.ts';
import {
    IoK8sApiCoreV1ContainerState,
    IoK8sApiCoreV1ContainerStateFromJSON,
    IoK8sApiCoreV1ContainerStateToJSON,
} from './index.ts';

/**
 * ContainerStatus contains details for the current status of this container.
 * @export
 * @interface IoK8sApiCoreV1ContainerStatus
 */
export interface IoK8sApiCoreV1ContainerStatus {
    /**
     * Container\'s ID in the format \'docker://<container_id>\'.
     * @type {string}
     * @memberof IoK8sApiCoreV1ContainerStatus
     */
    containerID?: string;
    /**
     * The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images
     * @type {string}
     * @memberof IoK8sApiCoreV1ContainerStatus
     */
    image: string;
    /**
     * ImageID of the container\'s image.
     * @type {string}
     * @memberof IoK8sApiCoreV1ContainerStatus
     */
    imageID: string;
    /**
     * 
     * @type {IoK8sApiCoreV1ContainerState}
     * @memberof IoK8sApiCoreV1ContainerStatus
     */
    lastState?: IoK8sApiCoreV1ContainerState;
    /**
     * This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.
     * @type {string}
     * @memberof IoK8sApiCoreV1ContainerStatus
     */
    name: string;
    /**
     * Specifies whether the container has passed its readiness probe.
     * @type {boolean}
     * @memberof IoK8sApiCoreV1ContainerStatus
     */
    ready: boolean;
    /**
     * The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.
     * @type {number}
     * @memberof IoK8sApiCoreV1ContainerStatus
     */
    restartCount: number;
    /**
     * 
     * @type {IoK8sApiCoreV1ContainerState}
     * @memberof IoK8sApiCoreV1ContainerStatus
     */
    state?: IoK8sApiCoreV1ContainerState;
}

export function IoK8sApiCoreV1ContainerStatusFromJSON(json: any): IoK8sApiCoreV1ContainerStatus {
    return {
        'containerID': !exists(json, 'containerID') ? undefined : json['containerID'],
        'image': json['image'],
        'imageID': json['imageID'],
        'lastState': !exists(json, 'lastState') ? undefined : IoK8sApiCoreV1ContainerStateFromJSON(json['lastState']),
        'name': json['name'],
        'ready': json['ready'],
        'restartCount': json['restartCount'],
        'state': !exists(json, 'state') ? undefined : IoK8sApiCoreV1ContainerStateFromJSON(json['state']),
    };
}

export function IoK8sApiCoreV1ContainerStatusToJSON(value?: IoK8sApiCoreV1ContainerStatus): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'containerID': value.containerID,
        'image': value.image,
        'imageID': value.imageID,
        'lastState': IoK8sApiCoreV1ContainerStateToJSON(value.lastState),
        'name': value.name,
        'ready': value.ready,
        'restartCount': value.restartCount,
        'state': IoK8sApiCoreV1ContainerStateToJSON(value.state),
    };
}


