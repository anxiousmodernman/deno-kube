// tslint:disable
/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.16.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    IoK8sApiAuthenticationV1TokenReview,
    IoK8sApiAuthenticationV1TokenReviewFromJSON,
    IoK8sApiAuthenticationV1TokenReviewToJSON,
    IoK8sApimachineryPkgApisMetaV1APIResourceList,
    IoK8sApimachineryPkgApisMetaV1APIResourceListFromJSON,
    IoK8sApimachineryPkgApisMetaV1APIResourceListToJSON,
} from '../models';

export interface CreateAuthenticationV1TokenReviewRequest {
    body: IoK8sApiAuthenticationV1TokenReview;
    dryRun?: string;
    fieldManager?: string;
    pretty?: string;
}

/**
 * no description
 */
export class AuthenticationV1Api extends runtime.BaseAPI {

    /**
     * create a TokenReview
     */
    async createAuthenticationV1TokenReviewRaw(requestParameters: CreateAuthenticationV1TokenReviewRequest): Promise<runtime.ApiResponse<IoK8sApiAuthenticationV1TokenReview>> {
        if (requestParameters.body === null || requestParameters.body === undefined) {
            throw new runtime.RequiredError('body','Required parameter requestParameters.body was null or undefined when calling createAuthenticationV1TokenReview.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.dryRun !== undefined) {
            queryParameters['dryRun'] = requestParameters.dryRun;
        }

        if (requestParameters.fieldManager !== undefined) {
            queryParameters['fieldManager'] = requestParameters.fieldManager;
        }

        if (requestParameters.pretty !== undefined) {
            queryParameters['pretty'] = requestParameters.pretty;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/authentication.k8s.io/v1/tokenreviews`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: IoK8sApiAuthenticationV1TokenReviewToJSON(requestParameters.body),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApiAuthenticationV1TokenReviewFromJSON(jsonValue));
    }

    /**
     * create a TokenReview
     */
    async createAuthenticationV1TokenReview(requestParameters: CreateAuthenticationV1TokenReviewRequest): Promise<IoK8sApiAuthenticationV1TokenReview> {
        const response = await this.createAuthenticationV1TokenReviewRaw(requestParameters);
        return await response.value();
    }

    /**
     * get available resources
     */
    async getAuthenticationV1APIResourcesRaw(): Promise<runtime.ApiResponse<IoK8sApimachineryPkgApisMetaV1APIResourceList>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["authorization"] = this.configuration.apiKey("authorization"); // BearerToken authentication
        }

        const response = await this.request({
            path: `/apis/authentication.k8s.io/v1/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => IoK8sApimachineryPkgApisMetaV1APIResourceListFromJSON(jsonValue));
    }

    /**
     * get available resources
     */
    async getAuthenticationV1APIResources(): Promise<IoK8sApimachineryPkgApisMetaV1APIResourceList> {
        const response = await this.getAuthenticationV1APIResourcesRaw();
        return await response.value();
    }

}
